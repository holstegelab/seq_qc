--- ../bcftools-1.8/htslib-1.8/vcf.c	2018-03-09 18:11:27.000000000 +0100
+++ htslib-1.8/vcf.c	2018-06-07 13:41:55.233506535 +0200
@@ -1937,7 +1937,7 @@
         }
         fmt[j].max_l = fmt[j].max_m = fmt[j].max_g = 0;
         fmt[j].key = kh_val(d, k).id;
-        fmt[j].is_gt = !strcmp(t, "GT");
+        fmt[j].is_gt = (strcmp(t, "GT") == 0) | (strcmp(t, "PGT") == 0);
         fmt[j].y = h->id[0][fmt[j].key].val->info[BCF_HL_FMT];
         v->n_fmt++;
     }
@@ -2093,7 +2093,7 @@
             if ((z->y>>4&0xf) == BCF_HT_STR) {
                 if (z->is_gt) {
                     int32_t *x = (int32_t*)(z->buf + z->size * m);
-                    if (z->size) x[0] = bcf_int32_missing;
+                    if (z->size) x[0] = 0;
                     for (l = 1; l < z->size>>2; ++l) x[l] = bcf_int32_vector_end;
                 } else {
                     char *x = (char*)z->buf + z->size * m;
@@ -2562,6 +2562,7 @@
         if ( v->n_fmt)
         {
             int gt_i = -1;
+            int pgt_i = -1;
             bcf_fmt_t *fmt = v->d.fmt;
             int first = 1;
             for (i = 0; i < (int)v->n_fmt; ++i) {
@@ -2574,6 +2575,7 @@
                 }
                 kputs(h->id[BCF_DT_ID][fmt[i].id].key, s);
                 if (strcmp(h->id[BCF_DT_ID][fmt[i].id].key, "GT") == 0) gt_i = i;
+                if ((strcmp(h->id[BCF_DT_ID][fmt[i].id].key, "PGT") == 0) && (fmt[i].type != BCF_BT_CHAR)) pgt_i = i;
             }
             if ( first ) kputs("\t.", s);
             for (j = 0; j < v->n_sample; ++j) {
@@ -2584,7 +2586,7 @@
                     if ( !f->p ) continue;
                     if (!first) kputc(':', s);
                     first = 0;
-                    if (gt_i == i)
+                    if ((gt_i == i) || (pgt_i == i))
                         bcf_format_gt(f,j,s);
                     else
                         bcf_fmt_array(s, f->n, f->type, f->p + j * f->size);
@@ -3802,6 +3804,11 @@
         // Ugly: GT field is considered to be a string by the VCF header but BCF represents it as INT.
         if ( bcf_hdr_id2type(hdr,BCF_HL_FMT,tag_id)!=BCF_HT_STR ) return -2;
     }
+    else if ( tag[0]=='P' && tag[1]=='G' && tag[2]=='T' && tag[3] == 0 )
+    {
+        // Ugly: PGT field is considered to be a string by the VCF header but BCF represents it as INT.
+        if ( bcf_hdr_id2type(hdr,BCF_HL_FMT,tag_id)!=BCF_HT_STR ) return -2;
+    }
     else if ( bcf_hdr_id2type(hdr,BCF_HL_FMT,tag_id)!=type ) return -2;     // expected different type
 
     if ( !(line->unpacked & BCF_UN_FMT) ) bcf_unpack(line, BCF_UN_FMT);
